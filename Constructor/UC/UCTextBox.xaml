<UserControl x:Class="Constructor.UC.UCTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Constructor.UC"
             xmlns:viewmodel="clr-namespace:Constructor.ViewModel"
             xmlns:textorimage="clr-namespace:Constructor.ViewModel.Table.TextOrImage"
             xmlns:view="clr-namespace:Constructor.View"
             mc:Ignorable="d" Height="{Binding Height}" Width="{Binding Width}">

    <UserControl.Resources>

        <!--TEXTBOX-->

        <DataTemplate DataType="{x:Type textorimage:TextCellVM}">
            <Border Height="{Binding Height}" Width="{Binding Width}"
                            BorderThickness="{Binding BorderThickness}" BorderBrush="Black"
                            Background="{Binding Background}">
                <TextBox
                             Background="{Binding Background}" 
                             BorderThickness="0,0,0,0"
                             VerticalAlignment="{Binding VerticalAlignment}" HorizontalAlignment="{Binding HorizontalAlignment}"
                             Text="{Binding Content}"
                             FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" FontStyle="{Binding FontStyle}"
                             FontWeight="{Binding FontWeight}" FontStretch="{Binding FontStretch}"
                             GotFocus="TextBox_GotFocus">
                    <TextBox.RenderTransformOrigin>
                        <Point X="0.5" Y="0.5"/>
                    </TextBox.RenderTransformOrigin>
                    <TextBox.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="{Binding Angle}"/>
                        </TransformGroup>
                    </TextBox.RenderTransform>
                </TextBox>
            </Border>
        </DataTemplate>

        <!--IMAGE-->

        <DataTemplate DataType="{x:Type textorimage:ImageCellVM}">
            <Border Height="{Binding Height}" Width="{Binding Width}"
                            BorderThickness="{Binding BorderThickness}" BorderBrush="Black"
                            Background="{Binding Background}">
                <Image
                             VerticalAlignment="{Binding VerticalAlignment}" HorizontalAlignment="{Binding HorizontalAlignment}"
                             Source="{Binding Content}" Stretch="Fill"
                    
                             GotFocus="TextBox_GotFocus">
                    <!--Grid.Column="{Binding Column}" Grid.Row="{Binding Row}"-->
                    <Image.RenderTransformOrigin>
                        <Point X="0.5" Y="0.5"/>
                    </Image.RenderTransformOrigin>
                    <Image.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="{Binding Angle}"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>
            </Border>
        </DataTemplate>

    </UserControl.Resources>

    <Border BorderBrush="Black" BorderThickness="{Binding BorderThickness}">
        <ItemsControl x:Name="myItems" ItemsSource="{Binding Cells}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid 
                        view:GridHelpers.RowCount="{Binding Rows}"              
                        view:GridHelpers.ColumnCount="{Binding Columns}">
                    </Grid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Style.Setters>
                        <Setter Property="Grid.Row" Value="{Binding CellRow}" />
                        <Setter Property="Grid.Column" Value="{Binding CellColumn}" />
                    </Style.Setters>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Border>
    
</UserControl>


<!--////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->

    <!--<DataGrid x:Name="dataGrid" ItemsSource="{Binding DefaultTableView, UpdateSourceTrigger=PropertyChanged}"
              VirtualizingPanel.VirtualizationMode="Recycling" ColumnWidth="*"
              CanUserAddRows="False" HeadersVisibility="None"
              BorderThickness="{Binding BorderThickness}" BorderBrush="Black" Background="{Binding Background}"
              VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="false"
              HorizontalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
    </DataGrid>
</UserControl>-->






<!--//////////////////////////////////////-->
<!--<DataGrid AutoGenerateColumns="True" ItemsSource="{Binding DataGridTable}" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn"
              CanUserAddRows="False" HeadersVisibility="None" ColumnWidth="*"
              BorderThickness="{Binding BorderThickness}" BorderBrush="Black" Background="{Binding Background}"
              VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="false"
              VerticalGridLinesBrush="White" HorizontalGridLinesBrush="white" GridLinesVisibility="None"
              HorizontalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
    <DataGrid.Resources>
                <ResourceDictionary>
                    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="{x:Null}" />
                        <Setter Property="BorderBrush" Value="{x:Null}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{x:Null}" />
                        <Setter Property="BorderBrush" Value="{x:Null}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </DataGrid.Resources>
    </DataGrid>-->